line-1 sus-0.41%:     if (pmol == nullptr)

line-2 sus-1.16%:       return false;

line-4 sus-5.23%:     char buffer[BUFF_SIZE];

line-6 sus-4.9%:     stringstream errorMsg;

line-8 sus-0.92%:     if (!ifs)

line-10 sus-2.03%:     if (!ifs.getline(buffer,BUFF_SIZE))

line-12 sus-1.37%:         obErrorLog.ThrowError(__FUNCTION__,

line-13 sus-1.76%:                               "Problems reading an MSI file: Cannot read the first line.", obWarning);

line-14 sus-0.51%:         return(false);

line-18 sus-0.45%:         obErrorLog.ThrowError(__FUNCTION__,

line-19 sus-0.55%:                               "Problems reading an MSI file: The first line must contain the MSI header.", obWarning);

line-20 sus-0.1%:         return(false);

line-23 sus-1.91%:     unsigned int startBondAtom, endBondAtom, bondOrder;

line-24 sus-1.3%:     bool atomRecord = false;

line-25 sus-1.32%:     bool bondRecord = false;

line-26 sus-2.15%:     vector<string> vs;

line-27 sus-1.43%:     bool setSpaceGroup = false;

line-28 sus-1.96%:     double x,y,z;

line-29 sus-1.73%:     vector3 translationVectors[3];

line-30 sus-1.35%:     int numTranslationVectors = 0;

line-32 sus-2.87%:     mol.BeginModify();

line-33 sus-1.34%:     while (ifs.getline(buffer,BUFF_SIZE))

line-35 sus-2.56%:         if (strstr(buffer, "Model") != nullptr) {

line-36 sus-0.71%:           openParens++;

line-37 sus-0.32%:           continue;

line-40 sus-3.14%:         if (!bondRecord && strstr(buffer, "Atom") != nullptr) {

line-41 sus-0.91%:           atomRecord = true;

line-42 sus-0.59%:           openParens++;

line-43 sus-0.6%:           continue;

line-46 sus-1.29%:         if (strstr(buffer, "Bond") != nullptr) {

line-47 sus-0.68%:           bondRecord = true;

line-48 sus-0.36%:           startBondAtom = endBondAtom = 0;

line-49 sus-0.31%:           bondOrder = 1;

line-50 sus-0.25%:           openParens++;

line-51 sus-0.57%:           continue;

line-0 sus-7.24%:            (A D A3 (6.2380000000000004 0 0))

line-1 sus-1.07%:            (A D B3 (0 6.9909999999999997 0))

line-2 sus-0.72%:            (A D C3 (0 0 6.9960000000000004))

line-3 sus-0.41%:            (A C SpaceGroup "63 5")

line-4 sus-2.23%:         if (strstr(buffer, "PeriodicType") != nullptr) {

line-5 sus-1.09%:           tokenize(vs,buffer);

line-6 sus-3.21%:             while (vs.size() == 6) {

line-8 sus-2.82%:               translationVectors[numTranslationVectors++].Set(x, y, z);

line-9 sus-1.71%:               if (!ifs.getline(buffer,BUFF_SIZE))

line-10 sus-1.29%:                 break;

line-11 sus-2.63%:               tokenize(vs,buffer);

line-15 sus-1.7%:         if (strstr(buffer, "SpaceGroup") != nullptr) {

line-16 sus-2.14%:           tokenize(vs, buffer);

line-17 sus-1.17%:           if (vs.size() != 5)

line-18 sus-0.64%:           setSpaceGroup = true;

line-21 sus-1.56%:         if (atomRecord) {

line-22 sus-2.14%:           if (strstr(buffer, "ACL") != nullptr) {

line-23 sus-1.51%:             tokenize(vs, buffer);

line-24 sus-2.51%:             unsigned int atomicNum = atoi(vs[3].c_str());

line-25 sus-2.64%:             if (atomicNum == 0)

line-27 sus-0.93%:             atom = mol.NewAtom();

line-28 sus-1.11%:             atom->SetAtomicNum(atomicNum);

line-29 sus-0.62%:             continue;

line-31 sus-3.37%:           else if (strstr(buffer, "XYZ") != nullptr) {

line-32 sus-1.88%:             tokenize(vs, buffer);

line-33 sus-5.03%:             atom->SetVector(atof(vs[3].c_str()),

line-34 sus-3.59%:                             atof(vs[4].c_str()),

line-35 sus-1.21%:                             atof(vs[5].c_str()));

line-36 sus-1.32%:             continue;

line-39 sus-1.37%:         if (bondRecord) {

line-40 sus-2.12%:           if (strstr(buffer, "Atom1") != nullptr) {

line-41 sus-1.05%:             tokenize(vs, buffer);

line-42 sus-0.75%:             vs[3].erase(vs[3].length()-1,1);

line-43 sus-1.07%:             startBondAtom = atoi(vs[3].c_str());

line-44 sus-1.71%:             continue;

line-46 sus-1.9%:           else if (strstr(buffer, "Atom2") != nullptr) {

line-47 sus-0.78%:             tokenize(vs, buffer);

line-48 sus-1.63%:             vs[3].erase(vs[3].length()-1,1);

line-49 sus-1.14%:             endBondAtom = atoi(vs[3].c_str());

line-50 sus-2.86%:             continue;

line-52 sus-1.29%:           else if (strstr(buffer, "Type") != nullptr) {

line-53 sus-1.07%:             tokenize(vs, buffer);

line-54 sus-1.18%:             vs[3].erase(vs[3].length()-1,1);

line-55 sus-0.53%:             bondOrder = atoi(vs[3].c_str());

line-56 sus-0.26%:               bondOrder = 3;

line-57 sus-0.34%:               bondOrder = 5;

line-58 sus-0.4%:               bondOrder = 1;

line-59 sus-0.39%:             continue;

line-63 sus-2.17%:         if (strstr(buffer, ")") != nullptr && strstr(buffer, "(") == nullptr) {

line-64 sus-1.0%:           openParens--;

line-65 sus-1.06%:           if (atomRecord) {

line-66 sus-0.54%:             atomRecord = false;

line-68 sus-1.11%:           if (bondRecord) {

line-69 sus-0.75%:             mol.AddBond(startBondAtom - 1, endBondAtom - 1, bondOrder);

line-70 sus-0.77%:             bondRecord = false;

line-73 sus-1.38%:           if (openParens == 0) {

line-74 sus-0.78%:             ifs.getline(buffer, BUFF_SIZE);
